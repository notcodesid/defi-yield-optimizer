# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TriggerConfig

    TriggerConfig(;
        type=nothing,
        params=nothing,
    )

    - type::String
    - params::Dict{String, Any}
"""
Base.@kwdef mutable struct TriggerConfig <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing
    params::Union{Nothing, Dict{String, Any}} = nothing

    function TriggerConfig(type, params, )
        OpenAPI.validate_property(TriggerConfig, Symbol("type"), type)
        OpenAPI.validate_property(TriggerConfig, Symbol("params"), params)
        return new(type, params, )
    end
end # type TriggerConfig

const _property_types_TriggerConfig = Dict{Symbol,String}(Symbol("type")=>"String", Symbol("params")=>"Dict{String, Any}", )
OpenAPI.property_type(::Type{ TriggerConfig }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TriggerConfig[name]))}

function check_required(o::TriggerConfig)
    o.type === nothing && (return false)
    o.params === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ TriggerConfig }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "TriggerConfig", :enum, val, ["webhook", "periodic"])
    end
end
